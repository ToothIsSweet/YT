name: YT Build
on:
  workflow_dispatch:
  schedule:
    - cron: "0 0 * * 1"  # Runs every Monday at midnight UTC

jobs:
  run:
    permissions: write-all
    runs-on: ubuntu-latest
    steps:
      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: "zulu"
          java-version: "22"

      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: true

      - name: Get Latest Tools
        run: |
          sudo apt install wget curl jq -y

          # Get latest revanced-cli release
          CLI_LATEST=$(curl -s https://api.github.com/repos/ReVanced/revanced-cli/releases/latest | jq -r '.assets[] | select(.name | endswith(".jar")) | .browser_download_url')
          wget -O rev-cli.jar "$CLI_LATEST"
          
          # Get latest revanced-patches release
          PATCHES_LATEST=$(curl -s https://api.github.com/repos/ReVanced/revanced-patches/releases/latest | jq -r '.assets[] | select(.name | endswith(".rvp")) | .browser_download_url')
          wget -O rev-patches.rvp "$PATCHES_LATEST"

          # Download latest apkmd
          wget -O apkmd https://github.com/tanishqmanuja/apkmirror-downloader/releases/download/v2.0.8/apkmd
          chmod +x apkmd

      - name: Get Latest YouTube & YT Music Versions
	run: |
          JSON_DATA=$(curl -s "https://api.revanced.app/v4/patches/list")

          # Extract latest compatible YouTube version
          YT_VERSION=$(echo "$JSON_DATA" | jq -r '[.[] | select(.compatiblePackages."com.google.android.youtube") | .compatiblePackages."com.google.android.youtube"[]] | max')

          # Extract latest compatible YouTube Music version
          YTM_VERSION=$(echo "$JSON_DATA" | jq -r '[.[] | select(.compatiblePackages."com.google.android.apps.youtube.music") | .compatiblePackages."com.google.android.apps.youtube.music"[]] | max')

          echo "Latest supported YouTube version: $YT_VERSION"
          echo "Latest supported YouTube Music version: $YTM_VERSION"

          # Generate dynamic apps.json
          cat <<EOF > apps.json
          {
            "options": {
              "arch": "arm64-v8a"
            },
            "apps": [
              {
                "name": "yt",
                "org": "google-inc",
                "repo": "youtube",
				"outFile": "yt",
                "version": "$YT_VERSION"
              },
              {
                "name": "ytm",
                "org": "google-inc",
				"outFile": "ytm",
                "repo": "youtube-music"
                $( [[ "$YTM_VERSION" != "null" && -n "$YTM_VERSION" ]] && echo ", \"version\": \"$YTM_VERSION\"" )
              }
            ]
          }
          EOF

      - name: Download YouTube APKs
        run: |
          ./apkmd apps.json

      - name: Patch YouTube APK
        run: |
          java -jar rev-cli.jar \
            patch -p rev-patches.rvp \
            -d "Announcements" \
            -d "Downloads" \
            ./yt.apk

          # Rename output
          mv yt-patched.apk yt-sw.apk

      - name: Patch YouTube Music APK
        run: |
          java -jar rev-cli.jar \
            patch -p rev-patches.rvp \
            ./ytm.apk

          # Rename output
          mv ytm-patched.apk ytm-sw.apk

      - name: Upload APK to release
        env:
          DATE: $(date +"%Y-%m-%d")
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ./yt-sw.apk
          release_name: "YT Automatic Build (Date: $DATE)"
          file_glob: true
          overwrite: true
