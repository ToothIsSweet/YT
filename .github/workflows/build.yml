name: YT Build
on:
  workflow_dispatch:
  schedule:
    - cron: "0 0 * * 1"  # Runs every Monday at midnight UTC

jobs:
  run:
    permissions: write-all
    runs-on: ubuntu-latest
    steps:
      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: "zulu"
          java-version: "22"

      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: true

      - name: Get Latest Tools
        run: |
          sudo apt install wget curl jq -y

          # Fetch latest versions
          CLI_VERSION=$(curl -s https://api.github.com/repos/ReVanced/revanced-cli/releases/latest | jq -r '.tag_name' | grep -oE '[0-9]+(\.[0-9]+)*')
          PATCHES_VERSION=$(curl -s https://api.github.com/repos/ReVanced/revanced-patches/releases/latest | jq -r '.tag_name' | grep -oE '[0-9]+(\.[0-9]+)*')

          # Download CLI and patches
          wget -O rev-cli.jar "https://github.com/ReVanced/revanced-cli/releases/download/v${CLI_VERSION}/revanced-cli-${CLI_VERSION}-all.jar"
          wget -O rev-patches.rvp "https://github.com/ReVanced/revanced-patches/releases/download/v${PATCHES_VERSION}/patches-${PATCHES_VERSION}.rvp"

          # Download latest apkmd
          wget -O apkmd https://github.com/tanishqmanuja/apkmirror-downloader/releases/download/v2.0.8/apkmd
          chmod +x apkmd

      - name: Get Latest YouTube & YT Music Versions
        run: |
          # Fetch JSON data from ReVanced API
          JSON_DATA=$(curl -s https://api.revanced.app/v4/patches/list)

          # Extract latest compatible YouTube version
          YT_VERSION=$(echo "$JSON_DATA" | jq -r '.[0].compatiblePackages["com.google.android.youtube"] | last')
          
          # Extract latest compatible YT Music version (may be null)
          YTM_VERSION=$(echo "$JSON_DATA" | jq -r '.[0].compatiblePackages["com.google.android.apps.youtube.music"] | last')

          # Fallback: If YTM_VERSION is null, use APKMirror
          if [[ "$YTM_VERSION" == "null" || -z "$YTM_VERSION" ]]; then
            echo "YT Music version not found! Fetching from APKMirror..."
            ./apkmd apps.json
            YTM_VERSION=$(jq -r '.apps[] | select(.name=="ytm") | .version' apps.json)
          fi

          # Debug output
          echo "Latest YouTube Version: $YT_VERSION"
          echo "Latest YouTube Music Version: $YTM_VERSION"

          # Save versions for next steps
          echo "YT_VERSION=$YT_VERSION" >> $GITHUB_ENV
          echo "YTM_VERSION=$YTM_VERSION" >> $GITHUB_ENV

      - name: Update apps.json & Download YouTube & YT Music APKs
        run: |
          # Modify apps.json with correct names and versions
          jq --arg yt_ver "$YT_VERSION" --arg ytm_ver "$YTM_VERSION" \
             '.apps |= map(if .name == "yt" then .version = $yt_ver | .outFile = "yt.apk" 
                           elif .name == "ytm" then .version = $ytm_ver | .outFile = "ytm.apk" 
                           else . end)' apps.json > apps_new.json && mv apps_new.json apps.json

          # Fetch APKs using apkmd
          ./apkmd apps.json

      - name: Verify & Rename Downloaded Files
        run: |
          ls -lah downloads
          mv downloads/*.apk downloads/yt.apk || echo "YouTube APK not found!"
          mv downloads/*.apk downloads/ytm.apk || echo "YouTube Music APK not found!"

      - name: Patch YouTube APK
        run: |
          java -jar rev-cli.jar \
            patch -p rev-patches.rvp \
            -d "Announcements" \
            -d "Downloads" \
            ./downloads/yt.apk

          # Rename output
          mv yt-patched.apk yt-sw.apk

      - name: Patch YouTube Music APK
        run: |
          java -jar rev-cli.jar \
            patch -p rev-patches.rvp \
            ./downloads/ytm.apk

          # Rename output
          mv ytm-patched.apk ytm-sw.apk

      - name: Upload APK to release
        env:
          DATE: $(date +"%Y-%m-%d")
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ./yt-sw.apk
          release_name: "YT Automatic Build (Date: $DATE)"
          file_glob: true
          overwrite: true
